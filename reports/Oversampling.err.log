Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
from dotenv import load_dotenv
import pandas as pd
from sqlalchemy import create_engine

load_dotenv()

# PostgreSQL
pg_host = os.getenv("PG_HOST")
pg_port = os.getenv("PG_PORT")
pg_db = os.getenv("PG_DB")
pg_user = os.getenv("PG_USER")
pg_password = os.getenv("PG_PASSWORD")

engine_pg = create_engine(
    f"postgresql+psycopg2://{pg_user}:{pg_password}@{pg_host}:{pg_port}/{pg_db}"
)

# MySQL
mysql_host = os.getenv("MYSQL_HOST")
mysql_port = os.getenv("MYSQL_PORT")
mysql_db = os.getenv("MYSQL_DB")
mysql_user = os.getenv("MYSQL_USER")
mysql_password = os.getenv("MYSQL_PASSWORD")

engine_mysql = create_engine(
    f"mysql+pymysql://{mysql_user}:{mysql_password}@{mysql_host}:{mysql_port}/{mysql_db}"
)

# ======================
# Ambil data
# ======================

# Ambil data dari tabel iris_mysql (MySQL)
df_mysql = pd.read_sql("SELECT * FROM iris_mysql;", engine_mysql)
print(df_mysql.head())

# Ambil data dari tabel iris (PostgreSQL)
df_postgre = pd.read_sql("SELECT * FROM iris;", engine_pg)
print(df_postgre.head())

------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[7][39m[32m, line 15[39m
[32m     12[39m pg_user = os.getenv([33m"[39m[33mPG_USER[39m[33m"[39m)
[32m     13[39m pg_password = os.getenv([33m"[39m[33mPG_PASSWORD[39m[33m"[39m)
[32m---> [39m[32m15[39m engine_pg = [43mcreate_engine[49m[43m([49m
[32m     16[39m [43m    [49m[33;43mf[39;49m[33;43m"[39;49m[33;43mpostgresql+psycopg2://[39;49m[38;5;132;43;01m{[39;49;00m[43mpg_user[49m[38;5;132;43;01m}[39;49;00m[33;43m:[39;49m[38;5;132;43;01m{[39;49;00m[43mpg_password[49m[38;5;132;43;01m}[39;49;00m[33;43m@[39;49m[38;5;132;43;01m{[39;49;00m[43mpg_host[49m[38;5;132;43;01m}[39;49;00m[33;43m:[39;49m[38;5;132;43;01m{[39;49;00m[43mpg_port[49m[38;5;132;43;01m}[39;49;00m[33;43m/[39;49m[38;5;132;43;01m{[39;49;00m[43mpg_db[49m[38;5;132;43;01m}[39;49;00m[33;43m"[39;49m
[32m     17[39m [43m)[49m
[32m     19[39m [38;5;66;03m# MySQL[39;00m
[32m     20[39m mysql_host = os.getenv([33m"[39m[33mMYSQL_HOST[39m[33m"[39m)

[36mFile [39m[32m<string>:2[39m, in [36mcreate_engine[39m[34m(url, **kwargs)[39m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/util/deprecations.py:281[39m, in [36mdeprecated_params.<locals>.decorate.<locals>.warned[39m[34m(fn, *args, **kwargs)[39m
[32m    274[39m     [38;5;28;01mif[39;00m m [38;5;129;01min[39;00m kwargs:
[32m    275[39m         _warn_with_version(
[32m    276[39m             messages[m],
[32m    277[39m             versions[m],
[32m    278[39m             version_warnings[m],
[32m    279[39m             stacklevel=[32m3[39m,
[32m    280[39m         )
[32m--> [39m[32m281[39m [38;5;28;01mreturn[39;00m [43mfn[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/create.py:564[39m, in [36mcreate_engine[39m[34m(url, **kwargs)[39m
[32m    561[39m kwargs.pop([33m"[39m[33mempty_in_strategy[39m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m    563[39m [38;5;66;03m# create url.URL object[39;00m
[32m--> [39m[32m564[39m u = [43m_url[49m[43m.[49m[43mmake_url[49m[43m([49m[43murl[49m[43m)[49m
[32m    566[39m u, plugins, kwargs = u._instantiate_plugins(kwargs)
[32m    568[39m entrypoint = u._get_entrypoint()

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/url.py:856[39m, in [36mmake_url[39m[34m(name_or_url)[39m
[32m    840[39m [38;5;250m[39m[33;03m"""Given a string, produce a new URL instance.[39;00m
[32m    841[39m 
[32m    842[39m [33;03mThe format of the URL generally follows `RFC-1738[39;00m
[32m   (...)[39m[32m    852[39m 
[32m    853[39m [33;03m"""[39;00m
[32m    855[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(name_or_url, [38;5;28mstr[39m):
[32m--> [39m[32m856[39m     [38;5;28;01mreturn[39;00m [43m_parse_url[49m[43m([49m[43mname_or_url[49m[43m)[49m
[32m    857[39m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(name_or_url, URL) [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m(
[32m    858[39m     name_or_url, [33m"[39m[33m_sqla_is_testing_if_this_is_a_mock_object[39m[33m"[39m
[32m    859[39m ):
[32m    860[39m     [38;5;28;01mraise[39;00m exc.ArgumentError(
[32m    861[39m         [33mf[39m[33m"[39m[33mExpected string or URL object, got [39m[38;5;132;01m{[39;00mname_or_url[38;5;132;01m!r}[39;00m[33m"[39m
[32m    862[39m     )

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/url.py:917[39m, in [36m_parse_url[39m[34m(name)[39m
[32m    914[39m     name = components.pop([33m"[39m[33mname[39m[33m"[39m)
[32m    916[39m     [38;5;28;01mif[39;00m components[[33m"[39m[33mport[39m[33m"[39m]:
[32m--> [39m[32m917[39m         components[[33m"[39m[33mport[39m[33m"[39m] = [38;5;28;43mint[39;49m[43m([49m[43mcomponents[49m[43m[[49m[33;43m"[39;49m[33;43mport[39;49m[33;43m"[39;49m[43m][49m[43m)[49m
[32m    919[39m     [38;5;28;01mreturn[39;00m URL.create(name, **components)  [38;5;66;03m# type: ignore[39;00m
[32m    921[39m [38;5;28;01melse[39;00m:

[31mValueError[39m: invalid literal for int() with base 10: 'None'

